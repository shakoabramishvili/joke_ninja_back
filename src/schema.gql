# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String
  hasPreviousPage: Boolean!
  startCursor: String
}

type User {
  id: ID!
  name: String
  email: String!
  externalId: String!
  externalType: String!
  score: Int!
  rank: Int!
  picture: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LeaderboardResponse {
  users: [User!]!
  currentUserRank: Int!
}

type LoginUserResponse {
  user: User!
  authToken: String!
}

type Answer {
  text: String!
  funnyRank: FunnyRank!
  clickCount: Int!
}

"""FunnyRank"""
enum FunnyRank {
  WORST
  GOOD
  BEST
}

type Joke {
  id: ID!
  question: String!
  answers: [Answer!]!
  coverImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type PaginatedJokes {
  edges: [JokeEdge!]
  pageInfo: PageInfo
}

type JokeEdge {
  cursor: String!
  node: Joke!
}

type JokeResponse {
  joke: Joke!
  userScored: Int!
}

type Query {
  users: [User!]!
  getUserById(id: ID!): User!
  getCurrentUser: User!
  leaderboard(limit: Int!): LeaderboardResponse!
  jokes(first: Int, after: String, last: Int, before: String): PaginatedJokes!
  joke(id: Int!): Joke!
}

type Mutation {
  login(loginUserInput: LoginUserInput!): LoginUserResponse!
  signup(signupInput: CreateUserInput!): User!
  socialAuth(socialAuthInput: SocialAuthInput!): LoginUserResponse!
  createJoke(createJokeInput: CreateJokeInput!): JokeResponse!
  updateJoke(updateJokeInput: UpdateJokeInput!): JokeResponse!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  externalId: String!
  externalType: String!
  picture: String!
}

input SocialAuthInput {
  method: AuthMethodEnum!
  accessToken: String!
  fcmToken: String
}

"""AuthMethodEnum"""
enum AuthMethodEnum {
  GOOGLE
  FACEBOOK
  APPLE
  GOOGLEWEB
}

input CreateJokeInput {
  question: String!
  coverImage: String!
}

input UpdateJokeInput {
  question: String
  coverImage: String
  id: ID!
  answerIndex: Int
}